#include <bits/stdc++.h>
using namespace std;
const long long MOD = 1e9 + 7;

// fast modular exponentiation
long long modPow(long long base, long long exp) {
    long long result = 1;
    while (exp > 0) {
        if (exp & 1) result = (result * base) % MOD;
        base = (base * base) % MOD;
        exp >>= 1;
    }
    return result;
}

class Solution {
public:
    int countGoodNumbers(long long n) {
        long long evenPos = (n + 1) / 2;  // ceil(n/2)
        long long oddPos = n / 2;         // floor(n/2)

        long long ways = (modPow(5, evenPos) * modPow(4, oddPos)) % MOD;
        return (int)ways;
    }
};
